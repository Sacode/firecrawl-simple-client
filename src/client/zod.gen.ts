// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zScrapeResponse = z.object({
    success: z.boolean().optional(),
    data: z.object({
        markdown: z.string().optional(),
        rawHtml: z.union([
            z.string(),
            z.null()
        ]).optional(),
        screenshot: z.union([
            z.string(),
            z.null()
        ]).optional(),
        links: z.array(z.string()).optional(),
        metadata: z.object({
            title: z.string().optional(),
            description: z.string().optional(),
            language: z.union([
                z.string(),
                z.null()
            ]).optional(),
            sourceURL: z.string().url().optional(),
            '<any other metadata> ': z.string().optional(),
            statusCode: z.number().int().optional(),
            error: z.union([
                z.string(),
                z.null()
            ]).optional()
        }).optional(),
        warning: z.union([
            z.string(),
            z.null()
        ]).optional()
    }).optional()
});

export const zCrawlStatusResponseObj = z.object({
    status: z.string().optional(),
    total: z.number().int().optional(),
    completed: z.number().int().optional(),
    expiresAt: z.string().datetime().optional(),
    next: z.union([
        z.string(),
        z.null()
    ]).optional(),
    data: z.array(z.object({
        markdown: z.string().optional(),
        rawHtml: z.union([
            z.string(),
            z.null()
        ]).optional(),
        links: z.array(z.string()).optional(),
        screenshot: z.union([
            z.string(),
            z.null()
        ]).optional(),
        metadata: z.object({
            title: z.string().optional(),
            description: z.string().optional(),
            language: z.union([
                z.string(),
                z.null()
            ]).optional(),
            sourceURL: z.string().url().optional(),
            '<any other metadata> ': z.string().optional(),
            statusCode: z.number().int().optional(),
            error: z.union([
                z.string(),
                z.null()
            ]).optional()
        }).optional()
    })).optional()
});

export const zCrawlResponse = z.object({
    success: z.boolean().optional(),
    id: z.string().optional(),
    url: z.string().url().optional()
});

export const zMapResponse = z.object({
    success: z.boolean().optional(),
    links: z.array(z.string()).optional()
});

export const zScrapeAndExtractFromUrlResponse = zScrapeResponse;

export const zCancelCrawlResponse = z.object({
    success: z.boolean().optional(),
    message: z.string().optional()
});

export const zGetCrawlStatusResponse = zCrawlStatusResponseObj;

export const zCrawlUrlsResponse = zCrawlResponse;

export const zMapUrlsResponse = zMapResponse;