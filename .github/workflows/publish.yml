name: Publish Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., patch, minor, major, or specific version)'
        required: true
        default: 'patch'

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Build package
        run: npm run build
      - name: Run tests with coverage
        run: npm test -- --coverage

  publish:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update version if manually triggered
        if: github.event_name == 'workflow_dispatch'
        id: version
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # If specific version is provided (e.g., 1.2.3)
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            # If semantic version keyword is provided (patch, minor, major)
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "Updated to version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Check package version
        id: check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $PACKAGE_VERSION"
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

          # Check if version exists on npm
          NPM_VERSION=$(npm view firecrawl-simple-client version 2>/dev/null || echo "Not found")
          if [ "$NPM_VERSION" = "$PACKAGE_VERSION" ]; then
            echo "Error: Version $PACKAGE_VERSION already exists on npm"
            exit 1
          fi

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version || steps.check.outputs.package_version }}
          release_name: Release v${{ steps.version.outputs.new_version || steps.check.outputs.package_version }}
          draft: false
          prerelease: false
